J-type
OOOOOO AAAAA AAAAA AAAAA AAAAA AAAAAA (only J and JAL)

I-type
OOOOOO SSSSS TTTTT IIIII IIIII IIIIII (dest is rT)

R-type
OOOOOO SSSSS TTTTT DDDDD MMMMM FFFFFF (dest is rD)


Root map (nearly all I-type )
000000 REG

000001 REGIMM

000010 iiiii iiiii iiiii iiiii iiiiii  J        -- Jump
000011 iiiii iiiii iiiii iiiii iiiiii  JAL      -- Jump and link

000100 sssss ttttt iiiii iiiii iiiiii  BEQ      -- Branch on equal
000101 sssss ttttt iiiii iiiii iiiiii  BNE      -- Branch on not equal
000110 sssss 00000 iiiii iiiii iiiiii  BLEZ     -- Branch on less than or equal to zero
000111 sssss 00000 iiiii iiiii iiiiii  BGTZ     -- Branch on greater than zero
001000 sssss ttttt iiiii iiiii iiiiii  ADDI     -- Add immediate
001001 sssss ttttt iiiii iiiii iiiiii  ADDIU    -- Add immediate unsigned
001010 sssss ttttt iiiii iiiii iiiiii  SLTI     -- Set on less than immediate (signed)
001011 sssss ttttt iiiii iiiii iiiiii  SLTIU    -- Set on less than immediate unsigned
001100 sssss ttttt iiiii iiiii iiiiii  ANDI     -- Bitwise and immediate
001101 sssss ttttt iiiii iiiii iiiiii  ORI      -- Bitwise or immediate
001110 sssss ttttt iiiii iiiii iiiiii  XORI     -- Bitwise exclusive or immediate
001111 ----- ttttt iiiii iiiii iiiiii  LUI      -- Load upper immediate
010000 ----- ttttt iiiii iiiii iiiiii  LLO      --
010001 ----- ttttt iiiii iiiii iiiiii  TRAP     --

100000 sssss ttttt iiiii iiiii iiiiii  LB       -- Load byte
100001 sssss ttttt iiiii iiiii iiiiii  LH       -- Load half
100011 sssss ttttt iiiii iiiii iiiiii  LW       -- Load word
100100 sssss ttttt iiiii iiiii iiiiii  LBU      -- Load byte unsigned
100101 sssss ttttt iiiii iiiii iiiiii  LHU      -- Load half unsigned
101000 sssss ttttt iiiii iiiii iiiiii  SB       -- Store byte
101001 sssss ttttt iiiii iiiii iiiiii  SH       -- Store half
101011 sssss ttttt iiiii iiiii iiiiii  SW       -- Store word

reg_map (all R-type)
000000 00000 00000 00000 00000 000000  NOP      -- no operation
000000 sssss ttttt ddddd hhhhh 000000  SLL      -- Shift left logical
000000 ----- ttttt ddddd hhhhh 000010  SRL      -- Shift right logical
000000 ----- ttttt ddddd hhhhh 000011  SRA      -- Shift right arithmetic
000000 sssss ttttt ddddd 00000 000100  SLLV     -- Shift left logical variable
000000 sssss ttttt ddddd 00000 000110  SRLV     -- Shift right logical variable
000000 sssss ttttt ddddd 00000 000111  SRAV     -- Shift right logical variable
000000 sssss 00000 00000 00000 001000  JR       -- Jump register
000000 sssss 00000 ddddd 00000 001001  JALR     -- Jump and link register
000000 ----- ----- ----- ----- 001100  SYSCALL  -- System call

000000 00000 00000 ddddd 00000 010000  MFHI     -- Move from HI
000000 sssss 00000 00000 00000 010001  MTHI     -- Move to HI
000000 00000 00000 ddddd 00000 010010  MFLO     -- Move from LO
000000 sssss 00000 00000 00000 010011  MTLO     -- Move to LO
000000 sssss ttttt 00000 00000 011000  MULT     -- Multiply
000000 sssss ttttt 00000 00000 011001  MULTU    -- Multiply unsigned
000000 sssss ttttt 00000 00000 011010  DIV      -- Divide
000000 sssss ttttt 00000 00000 011011  DIVU     -- Divide unsigned

000000 sssss ttttt ddddd 00000 100000  ADD      -- Add
000000 sssss ttttt ddddd 00000 100001  ADDU     -- Add unsigned
000000 sssss ttttt ddddd 00000 100010  SUB      -- Subtract
000000 sssss ttttt ddddd 00000 100011  SUBU     -- Subtract unsigned
000000 sssss ttttt ddddd 00000 100100  AND      -- Bitwise and
000000 sssss ttttt ddddd 00000 100101  OR       -- Bitwise or
000000 sssss ttttt ddddd ----- 100110  XOR      -- Bitwise exclusive or
000000 sssss ttttt ddddd ----- 100111  NOR      -- Bitwise not or
000000 sssss ttttt ddddd 00000 101010  SLT      -- Set on less than (signed)
000000 sssss ttttt ddddd 00000 101011  SLTU     -- Set on less than unsigned

regimm_map // All I-type
000001 sssss 00000 iiiii iiiii iiiiii  BLTZ     -- Branch on less than zero
000001 sssss 00001 iiiii iiiii iiiiii  BGEZ     -- Branch on greater than or equal to zero
000001 sssss 10000 iiiii iiiii iiiiii  BLTZAL   -- Branch on less than zero and link
000001 sssss 10001 iiiii iiiii iiiiii  BGEZAL   -- Branch on greater than or equal to zero and link



Partial toplevel matrix:

        0       1       2       3       4       5       6       7
0       REG     REGIMM  J       JAL     BEQ     BNE     BLEZ    BGTZ
1       ADDI    ADDIU   SLTI    SLTIU   ANDI*   ORI*    XORI*   LUI*
2       CP0     CP1     CP2             BBQL                    BGTZL
3
4       LB      LH      LWL     LW      LBU     LHU     LWR
5       SB      SH      SWL     SW                      SWR
6
7

The four marked instructions (*) does not sign extend their operand
(instead of producing the sign extended and non-sign extended
immediate operand as I do today, I could just make those instructions
pretend the upper 16-bit are zero...).
